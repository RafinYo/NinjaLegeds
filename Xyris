if game.PlaceId == 3956818381 then
    -- Clean up previous UI instances
    for _, v in pairs(game:GetService("CoreGui"):GetChildren()) do
        if v:FindFirstChild("MainFrameHolder") or v:FindFirstChild("NotificationHolder") then
            v:Destroy()
        end
    end

    -- Reset all global toggles
    getgenv().autoopencrystals = false
    getgenv().autobuyranks = false
    getgenv().autobuybelts = false
    getgenv().autobuyskills = false
    getgenv().autosell = false
    getgenv().autoswing = false
    getgenv().autosellpets = false

    -- Load Orion Library
    local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()

    local Window = OrionLib:MakeWindow({
        Name = "Xyris Hub - Ninja Legends",
        HidePremium = false,
        SaveConfig = true,
        ConfigFolder = "XyrisHubStuff",
        IntroText = "Loading Xyris Hub",
    })

    -- Tabs
    local AutofarmTab = Window:MakeTab({ Name = "Autofarm", Icon = "rbxassetid://4483362458" })
    local PetsTab = Window:MakeTab({ Name = "Pets" })
    local TeleportTab = Window:MakeTab({ Name = "Teleport" })
    local PlayerTab = Window:MakeTab({ Name = "Player" })
    local MiscTab = Window:MakeTab({ Name = "Misc" })

    local Character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()

    -- Autofarm Toggles
    AutofarmTab:AddToggle({
        Name = "Auto Swing",
        Default = false,
        Callback = function(state)
            getgenv().autoswing = state
            while getgenv().autoswing do
                game:GetService("Players").LocalPlayer.ninjaEvent:FireServer("swingKatana")
                task.wait(0.1)
            end
        end
    })

    AutofarmTab:AddToggle({
        Name = "Auto Sell",
        Default = false,
        Callback = function(state)
            getgenv().autosell = state
            while getgenv().autosell do
                game:GetService("Players").LocalPlayer.ninjaEvent:FireServer("sell")
                task.wait(5)
            end
        end
    })

    -- Pet Crystals Dropdown
    local SelectedCrystal
    local crystals = game:GetService("Workspace").mapCrystalsFolder:GetChildren()
    local crystalNames = {}

    for _, crystal in ipairs(crystals) do
        table.insert(crystalNames, crystal.Name)
    end

    PetsTab:AddDropdown({
        Name = "Select Crystal",
        Options = crystalNames,
        Callback = function(crystalName)
            SelectedCrystal = crystalName
        end
    })

    PetsTab:AddButton({
        Name = "Open Selected Crystal",
        Callback = function()
            if SelectedCrystal then
                local event = game:GetService("ReplicatedStorage").rEvents.openCrystalRemote
                event:InvokeServer("openCrystal", SelectedCrystal)
            else
                OrionLib:MakeNotification({
                    Name = "Error",
                    Content = "No crystal selected!",
                    Time = 3
                })
            end
        end
    })

    -- Teleport Dropdown
    local islands = {
        "Enchanted Island", "Astral Island", "Mystical Island", "Space Island",
        "Tundra Island", "Eternal Island", "Sandstorm", "Thunderstorm",
        "Ancient Inferno Island", "Midnight Shadow Island", "Mythical Souls Island",
        "Winter Wonder Island", "Golden Master Island", "Dragon Legend Island",
        "Cybernetic Legends Island", "Skystorm Ultraus Island", "Chaos Legends Island",
        "Soul Fusion Island", "Dark Elements Island", "Inner Peace Island",
        "Blazing Vortex Island"
    }

    TeleportTab:AddDropdown({
        Name = "Select Island",
        Options = islands,
        Callback = function(selectedIsland)
            local part = game:GetService("Workspace").islandUnlockParts:FindFirstChild(selectedIsland)
            if part then
                Character.HumanoidRootPart.CFrame = part.CFrame
            else
                OrionLib:MakeNotification({
                    Name = "Error",
                    Content = "Island not found!",
                    Time = 3
                })
            end
        end
    })

    -- Player WalkSpeed and JumpPower Sliders
    PlayerTab:AddSlider({
        Name = "WalkSpeed",
        Min = 16,
        Max = 500,
        Default = 16,
        Callback = function(value)
            Character.Humanoid.WalkSpeed = value
        end
    })

    PlayerTab:AddSlider({
        Name = "JumpPower",
        Min = 50,
        Max = 400,
        Default = 50,
        Callback = function(value)
            Character.Humanoid.JumpPower = value
        end
    })

    -- Misc Buttons
    MiscTab:AddButton({
        Name = "Unlock All Islands",
        Callback = function()
            for _, part in pairs(game:GetService("Workspace").islandUnlockParts:GetChildren()) do
                firetouchinterest(Character.HumanoidRootPart, part, 0)
                firetouchinterest(Character.HumanoidRootPart, part, 1)
            end
        end
    })

    MiscTab:AddButton({
        Name = "Unlock All Elements",
        Callback = function()
            for _, element in pairs(game:GetService("ReplicatedStorage").Elements:GetChildren()) do
                game:GetService("ReplicatedStorage").rEvents.elementMasteryEvent:FireServer(element)
            end
        end
    })

    MiscTab:AddButton({
        Name = "Infinite Double Jumps",
        Callback = function()
            game.Players.LocalPlayer.multiJumpCount.Value = 999999999
        end
    })

    -- Notify on Load
    OrionLib:MakeNotification({
        Name = "Xyris Hub Loaded",
        Content = "Enjoy using the script! Join our Discord for support.",
        Time = 6.5,
        Image = "rbxassetid://4483362458",
        Callback = function()
            setclipboard("https://discord.gg/3WtS2F7CaX")
        end
    })

    OrionLib:Init()
end
